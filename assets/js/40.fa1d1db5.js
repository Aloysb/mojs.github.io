(window.webpackJsonp=window.webpackJsonp||[]).push([[40],{509:function(t,s,n){"use strict";n.r(s);var a=n(54),e=Object(a.a)({},(function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("h1",{attrs:{id:"shape"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#shape"}},[t._v("#")]),t._v(" Shape")]),t._v(" "),n("ul",[n("li",[n("a",{attrs:{href:"https://codepen.io/sol0mka/pen/bbd4fe6c1ac8519c76bc18828844e2c3",target:"_blank",rel:"noopener noreferrer"}},[t._v("CodePen Example"),n("OutboundLink")],1)]),t._v(" "),n("li",[n("RouterLink",{attrs:{to:"/api/tweens/tween.html"}},[t._v("Tween API")])],1)]),t._v(" "),n("p",[t._v("Full API reference:")]),t._v(" "),n("div",{staticClass:"language-javascript extra-class"},[n("pre",{pre:!0,attrs:{class:"language-javascript"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" shape "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("mojs"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Shape")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* SHAPE PROPERTIES */")]),t._v("\n\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Parent of the module. {String, Object} [selector, HTMLElement]")]),t._v("\n  parent"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("           document"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("body"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Class name. {String}")]),t._v("\n  className"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("        "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("''")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Shape name. {String} [ 'circle' | 'rect' | 'polygon' | 'line' | 'cross' | 'equal' | 'curve' | 'zigzag' | '*custom defined name*' ]")]),t._v("\n  shape"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("            "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'circle'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ∆ :: Stroke color. {String} [color name, rgb, rgba, hex]")]),t._v("\n  stroke"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("           "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'transparent'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ∆ :: Stroke Opacity. {Number} [ 0..1 ]")]),t._v("\n  strokeOpacity"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("    "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Stroke Line Cap. {String} ['butt' | 'round' | 'square']")]),t._v("\n  strokeLinecap"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("    "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("''")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ∆ :: Stroke Width. {Number} [ number ]")]),t._v("\n  strokeWidth"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("      "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ∆ , Units :: Stroke Dash Array. {String, Number}")]),t._v("\n  strokeDasharray"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("  "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ∆ , Units :: Stroke Dash Offset. {String, Number}")]),t._v("\n  strokeDashoffset"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ∆ :: Fill Color. {String} [color name, rgb, rgba, hex]")]),t._v("\n  fill"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("             "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'deeppink'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ∆ :: Fill Opacity. {Number} [ 0..1 ]")]),t._v("\n  fillOpacity"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("      "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ∆ , Units :: Left position of the module. {Number, String}")]),t._v("\n  left"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("             "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'50%'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ∆ , Units :: Top position of the module. {Number, String}")]),t._v("\n  top"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("              "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'50%'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ∆ , Units :: X shift. {Number, String}")]),t._v("\n  x"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("                "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ∆ , Units :: Y shift. {Number, String}")]),t._v("\n  y"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("                "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ∆ :: Angle. {Number, String}")]),t._v("\n  rotate"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("            "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ∆ :: Scale of the module. {Number}")]),t._v("\n  scale"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("            "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ∆ :: Explicit scaleX value (fallbacks to `scale`). {Number}")]),t._v("\n  scaleX"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("           "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ∆ :: Explicit scaleX value (fallbacks to `scale`). {Number}")]),t._v("\n  scaleY"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("           "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ∆ , Unit :: Origin for `x`, `y`, `scale`, `rotate` properties. {String}")]),t._v("\n  origin"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("           "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'50% 50%'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ∆ :: Opacity. {Number} [ 0..1 ]")]),t._v("\n  opacity"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("          "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ∆ :: X border radius. {Number, String}")]),t._v("\n  rx"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("               "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ∆ :: Y border radius. {Number, String}")]),t._v("\n  ry"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("               "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ∆ :: Points count ( for polygon, zigzag, equal ). {Number, String}")]),t._v("\n  points"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("           "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ∆ :: Radius of the shape. {Number, String}")]),t._v("\n  radius"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("           "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("50")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ∆ :: Radius X of the shape (fallbacks to `radius`). {Number, String}")]),t._v("\n  radiusX"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("          "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ∆ :: Radius Y of the shape (fallbacks to `radius`). {Number, String}")]),t._v("\n  radiusY"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("          "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// If should hide module with `transforms` instead of `display`. {Boolean}")]),t._v("\n  isSoftHide"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("       "),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// If should trigger composite layer for the module. {Boolean}")]),t._v("\n  isForce3d"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("        "),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// If should be shown before animation starts. {Boolean}")]),t._v("\n  isShowStart"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("      "),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// If should stay shown after animation ends. {Boolean}")]),t._v("\n  isShowEnd"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("        "),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// If refresh state on subsequent plays. {Boolean}")]),t._v("\n  isRefreshState"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("   "),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Context callbacks will be called with. {Object}")]),t._v("\n  callbacksContext"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* TWEEN PROPERTIES */")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Duration {Number}")]),t._v("\n  duration"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("       "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("350")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Delay {Number}")]),t._v("\n  delay"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("          "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// If should repeat after animation finished {Number} *(1)")]),t._v("\n  repeat"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("         "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Speed of the tween {Number}[0..∞]")]),t._v("\n  speed"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("          "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// If the progress should be flipped on repeat animation end {Boolean}")]),t._v("\n  isYoyo"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("         "),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Easing function {String, Function}[ easing name, path coordinates, bezier string, easing function ]")]),t._v("\n  easing"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("         "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'sin.out'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Easing function for backward direction of the tween animation (fallbacks to `easing`) {String, Function}[ easing name, path coordinates, bezier string, easing function ]")]),t._v("\n  backwardEasing"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* TWEEN CALLBACKS */")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*\n    Fires on every update of the tween in any period (including delay periods). You probably want to use `onUpdate` method instead.\n    @param p {Number} Normal (not eased) progress.\n    @param isForward {Boolean} Direction of the progress.\n    @param isYoyo {Boolean} If in `yoyo` period.\n  */")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("onProgress")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("p"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" isForward"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" isYoyo")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*\n    Fires when tween's the entire progress reaches `0` point(doesn't fire in repeat periods).\n    @param isForward {Boolean} If progress moves in forward direction.\n    @param isYoyo {Boolean} If progress inside `yoyo` flip period.\n  */")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("onStart")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("isForward"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" isYoyo")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*\n    Fires when tween's the progress reaches `0` point in normal or repeat period.\n    @param isForward {Boolean} If progress moves in forward direction.\n    @param isYoyo {Boolean} If progress inside `yoyo` flip period.\n  */")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("onFirstUpdate")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("isForward"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" isYoyo")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*\n    Fires on first update of the tween in sufficiently active period (excluding delay periods).\n    @param ep {Number} Eased progress.\n    @param p {Number} Normal (not eased) progress.\n    @param isForward {Boolean} Direction of the progress.\n    @param isYoyo {Boolean} If in `yoyo` period.\n  */")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("onUpdate")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("ep"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" p"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" isForward"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" isYoyo")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*\n    Fires when tween's the progress reaches `1` point in normal or repeat period.\n    @param isForward {Boolean} If progress moves in forward direction.\n    @param isYoyo {Boolean} If progress inside `yoyo` flip period.\n  */")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("onRepeatComplete")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("isForward"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" isYoyo")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*\n    Fires when tween's the entire progress reaches `1` point(doesn't fire in repeat periods).\n    @param isForward {Boolean} If progress moves in forward direction.\n    @param isYoyo {Boolean} If progress inside `yoyo` flip period.\n  */")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("onComplete")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("isForward"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" isYoyo")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* Fires when the `.play` method called and tween isn't in play state yet. */")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("onPlaybackStart")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* Fires when the `.pause` method called and tween isn't in pause state yet. */")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("onPlaybackPause")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* Fires when the `.stop` method called and tween isn't in stop state yet. */")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("onPlaybackStop")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* Fires when the tween end's animation (regardless progress) */")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("onPlaybackComplete")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*\n    Creates next state transition chain.\n    @param options {Object} Next shape state.\n  */")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("then")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* next state options */")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*\n    Tunes start state with new options.\n    @param options {Object} New start properties.\n  */")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("tune")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* new start properties */")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*\n    Regenerates all randoms in initial properties.\n  */")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("generate")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*\n    Starts playback.\n    @param shift {Number} Start progress shift in milliseconds.\n  */")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("play")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" shift "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*\n    Starts playback in backward direction.\n    @param shift {Number} Start progress shift in milliseconds.\n  */")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("playBackward")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" shift "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*\n    Pauses playback.\n  */")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("pause")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*\n    Restarts playback.\n    @param shift {Number} Start progress shift in milliseconds.\n  */")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("replay")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" shift "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*\n    Restarts playback in backward direction.\n    @param shift {Number} Start progress shift in milliseconds.\n  */")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("replayBackward")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" shift "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*\n    Resumes playback in direction it was prior to `pause`.\n    @param shift {Number} Start progress shift in milliseconds.\n  */")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("resume")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" shift "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*\n    Sets progress of the tween.\n    @param progress {Number} Progress to set [ 0..1 ].\n  */")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("setProgress")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" progress "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*\n    Sets speed of the tween.\n    @param speed {Number} Progress to set [ 0..∞ ].\n  */")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("setSpeed")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" speed "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* Stops and resets the tween. */")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("reset")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" speed "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n")])])]),n("ul",[n("li",[n("a",{attrs:{href:"https://codepen.io/sol0mka/pen/bbd4fe6c1ac8519c76bc18828844e2c3",target:"_blank",rel:"noopener noreferrer"}},[t._v("CodePen Example"),n("OutboundLink")],1)]),t._v(" "),n("li",[n("RouterLink",{attrs:{to:"/api/tweens/tween.html"}},[t._v("Tween API")])],1)])])}),[],!1,null,null,null);s.default=e.exports}}]);